DEFINT A-Z

DATA &H50,&H53,&H56,&HBE,&H0,&H0,&H2E,&HC7,&H4,&H0,&H0,&HB8,&H0,&HDB,&HCD,&H2F,&H3C,&HFF,&H75,&H12,&H81,&HFB,&H50,&H54,&H75,&HC,&HB8,&H11,&H0,&HCD,&H79,&H75,&H5,&H2E,&HC7,&H4,&H1,&H0,&H5E,&H5B,&H58,&HCB
DATA &H1E,&H6,&H56,&H57,&H50,&H53,&HBE,&H0,&H0,&HBF,&H0,&H0,&HB8,&H0,&H0,&HBB,&H0,&H0,&H8E,&HD8,&H8E,&HC3,&HCD,&H7E,&H5B,&H58,&H5F,&H5E,&H7,&H1F,&HCB
DATA &H1E,&H6,&H56,&H57,&H50,&HBE,&H0,&H0,&HB8,&H0,&H0,&H8E,&HD8,&HBF,&H0,&H0,&HB8,&H0,&H0,&H8E,&HC0,&H53,&H51,&H52,&H8B,&H44,&H2,&H2E,&HA3,&H56,&H1,&H8B
DATA &H54,&H6,&H8A,&H44,&H8,&H8B,&H4C,&H4,&H8B,&H1C,&HB4,&H80,&H50,&H26,&H22,&H25,&H74,&H4,&HB4,&HC,&HCD,&H10,&H58,&H4B,&H74,&HB,&H41,&H80,&HFC,&H1,&H75,&H1
DATA &H47,&HD0,&HCC,&HEB,&HE7,&H47,&H42,&H83,&H6C,&H2,&H1,&H75,&HD8,&H5A,&H59,&H5B,&H58,&H5F,&H5E,&H7,&H1F,&HCB,&H0,&H0

DIM SHARED ASMINT7E(15)
DIM SHARED ASMDRAW(44)
TYPE FontDataT
    CH0 AS STRING * 1
    CH1 AS STRING * 1
    FONT AS INTEGER
    W AS INTEGER
    H AS INTEGER
    TOP AS INTEGER
    BOTTOM AS INTEGER
    ATTR AS INTEGER
    BUFLEN AS INTEGER
END TYPE
TYPE DrawBitmapT
    W AS INTEGER
    H AS INTEGER
    X AS INTEGER
    Y AS INTEGER
    C AS STRING*1
END TYPE
DIM SHARED BITMAP(8194) AS INTEGER

COMMON SHARED W,H,FASC,FHZK,ATTR,XADJ,MSTR AS STRING

CALL InitEnv
CALL MainLoop
CLS:END

SUB MainLoop
  STATIC RUNNING AS INTEGER
  MSTR="Sample Text，范例文本"
  W=12: H=24: FASC=0: FHZK=0: ATTR=1: XADJ=0
  RUNNING=1
  DO
    CLS
    RES=0: CALL MeasureAndDrawStr(MSTR,RES,W,H,FASC,FHZK,ATTR,XADJ)
    LOCATE 1,1:PRINT "0.内容：";MSTR;
    LOCATE 3,1:PRINT "1.字符宽度（px）：";W;
    LOCATE 3,26:PRINT "2.字符高度（px）：";H;
    LOCATE 3,51:PRINT "3.西文字体：";FASC;
    LOCATE 4,1:PRINT "4.中文字体：";FHZK;
    LOCATE 4,26:PRINT "5.字符属性：";ATTR;
    LOCATE 4,51:PRINT "6.字距调整（px）：";XADJ;
    LOCATE 6,1:PRINT "字符串长度（px）：";RES;
    LOCATE 8,1:PRINT "按0-6选择要修改的项目，按Esc或q退出。";
    K$="": DO: K$=INPUT$(1): LOOP WHILE K$=""
    SELECT CASE K$
      CASE CHR$(27)
        RUNNING=0
      CASE "q"
        RUNNING=0
      CASE "Q"
        RUNNING=0
      CASE "0"
        LOCATE 9,1:INPUT "内容：",MSTR
      CASE "1"
        LOCATE 9,1:INPUT "字符宽度（px）：",W
      CASE "2"
        LOCATE 9,1:INPUT "字符高度（px）：",H
      CASE "3"
        LOCATE 9,1:INPUT "西文字体（0-10）：",FASC
      CASE "4"
        LOCATE 9,1:INPUT "中文字体（0-33）：",FHZK
      CASE "5"
        LOCATE 9,1:INPUT "字符属性：",ATTR
      CASE "6"
        LOCATE 9,1:INPUT "字距调整（px）：",XADJ
    END SELECT
  LOOP UNTIL (RUNNING=0)
END SUB

SUB MeasureAndDrawStr(STR AS STRING, RES AS INTEGER, W AS INTEGER, H AS INTEGER, FONTASC AS INTEGER, FONTHZK AS INTEGER, ATTR AS INTEGER, DIST AS INTEGER)
  I=0: L=LEN(STR): FONT=0: RES=0
  WHILE I<L
    CH$=MID$(STR,I+1,1): FONT=FONTASC: WA=W
    IF ASC(CH$)>=&H80 THEN
      I=I+1: CH$=CH$+MID$(STR,I+1,1): FONT=FONTHZK
    END IF
    CALL GetChar(CH$,FONT,WA,H,ATTR)
    CALL DrawChar(WA,H,RES,180,15)
    DX=WA+DIST: IF DX>0 THEN RES=RES+DX
    I=I+1
  WEND
END SUB
SUB GetChar(STR AS STRING,FONT AS INTEGER,W AS INTEGER,H AS INTEGER,ATTR AS INTEGER)
    STATIC Param AS FontDataT
    IF ASC(MID$(STR,1,1)) < &H80 THEN
        Param.CH0=STR: Param.CH1=CHR$(0)
        Param.W=W
    ELSE
        Param.CH0=MID$(STR,2,1): Param.CH1=MID$(STR,1,1)
        Param.W=W*2
    END IF
    Param.FONT=FONT: Param.H=H
    Param.TOP=0: Param.BOTTOM=H-1
    Param.ATTR=ATTR: Param.BUFLEN=16384
    DS=VARSEG(Param): ES=VARSEG(BITMAP(0))
    SI=VARPTR(Param): DI=VARPTR(BITMAP(0))
    DEF SEG=VARSEG(SI): SI0=PEEK(VARPTR(SI)): SI1=PEEK(VARPTR(SI)+1)
    DEF SEG=VARSEG(DI): DI0=PEEK(VARPTR(DI)): DI1=PEEK(VARPTR(DI)+1)
    DEF SEG=VARSEG(DS): DS0=PEEK(VARPTR(DS)): DS1=PEEK(VARPTR(DS)+1)
    DEF SEG=VARSEG(ES): ES0=PEEK(VARPTR(ES)): ES1=PEEK(VARPTR(ES)+1)
    DEF SEG=VARSEG(ASMINT7E(0)): OFFSET=VARPTR(ASMINT7E(0))
    POKE OFFSET+7, SI0: POKE OFFSET+8, SI1
    POKE OFFSET+10, DI0: POKE OFFSET+11, DI1
    POKE OFFSET+13, DS0: POKE OFFSET+14, DS1
    POKE OFFSET+16, ES0: POKE OFFSET+17, ES1
    CALL ABSOLUTE(OFFSET): DEF SEG
    W=Param.W
END SUB
SUB DrawChar(W AS INTEGER, H AS INTEGER, X AS INTEGER, Y AS INTEGER, C AS INTEGER)
    STATIC Param AS DrawBitmapT
    Param.W=W: Param.H=H: Param.X=X: Param.Y=Y: Param.C=CHR$(C)
    DS=VARSEG(Param): ES=VARSEG(BITMAP(0))
    SI=VARPTR(Param): DI=VARPTR(BITMAP(0))
    DEF SEG=VARSEG(SI): SI0=PEEK(VARPTR(SI)): SI1=PEEK(VARPTR(SI)+1)
    DEF SEG=VARSEG(DI): DI0=PEEK(VARPTR(DI)): DI1=PEEK(VARPTR(DI)+1)
    DEF SEG=VARSEG(DS): DS0=PEEK(VARPTR(DS)): DS1=PEEK(VARPTR(DS)+1)
    DEF SEG=VARSEG(ES): ES0=PEEK(VARPTR(ES)): ES1=PEEK(VARPTR(ES)+1)
    DEF SEG=VARSEG(ASMDRAW(0)): OFFSET=VARPTR(ASMDRAW(0))
    POKE OFFSET+6, SI0: POKE OFFSET+7, SI1
    POKE OFFSET+9, DS0: POKE OFFSET+10, DS1
    POKE OFFSET+14, DI0: POKE OFFSET+15, DI1
    POKE OFFSET+17, ES0: POKE OFFSET+18, ES1
    CALL ABSOLUTE(OFFSET)
    DEF SEG
END SUB

SUB InitEnv
  DIM A%(50)
  DEF SEG = VARSEG(A%(0))
  RESTORE
  FOR I% = 0 TO 41
    READ D%
    IF I% = 4 THEN
       D% = VARPTR(A%(49)) MOD 256
    ELSEIF I% = 5 THEN
       D% = VARPTR(A%(49)) / 256
    END IF
    POKE VARPTR(A%(0)) + I%, D%
  NEXT I%
  CALL ABSOLUTE(VARPTR(A%(0)))
  DEF SEG
  IF A%(49) = 0 THEN PRINT "Please run TX.COM first":END
  DEF SEG = VARSEG(ASMINT7E(0))
  FOR I% = 0 TO 30
    READ D%: POKE VARPTR(ASMINT7E(0)) + I%, D%
  NEXT I%
  DEF SEG = VARSEG(ASMDRAW(0))
  FOR I% = 0 TO 87
    READ D%: POKE VARPTR(ASMDRAW(0)) + I%, D%
  NEXT I%
  DEF SEG
END SUB