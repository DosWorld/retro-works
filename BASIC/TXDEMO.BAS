DECLARE SUB TestTX ()
DECLARE FUNCTION n$ (n%)
DECLARE SUB TX (s AS STRING)
DATA &H50,&H53,&H56,&HBE,&H0,&H0,&H2E,&HC7,&H4,&H0,&H0,&HB8,&H0,&HDB,&HCD,&H2F,&H3C,&HFF,&H75,&H12,&H81,&HFB,&H50,&H54,&H75,&HC,&HB8,&H11,&H0,&HCD,&H79,&H75,&H5,&H2E,&HC7,&H4,&H1,&H0,&H5E,&H5B,&H58,&HCB
DATA &H1E,&H6,&H56,&H57,&H50,&H53,&HBE,&H0,&H0,&HBF,&H0,&H0,&HB8,&H0,&H0,&HBB,&H0,&H0,&H8E,&HD8,&H8E,&HC3,&HCD,&H7E,&H5B,&H58,&H5F,&H5E,&H7,&H1F,&HCB
DATA &H50,&H51,&H52,&HB0,&H0,&HB9,&H0,&H0,&HBA,&H0,&H0,&HB4,&HC,&HCD,&H10,&H5A,&H59,&H58,&HCB

DEFINT A-Z
DIM SHARED ASMINT7E(31)
DIM SHARED ASMDRAW(10)
TYPE FontDataT
    CH0 AS STRING * 1
    CH1 AS STRING * 1
    FONT AS INTEGER
    W AS INTEGER
    H AS INTEGER
    TOP AS INTEGER
    BOTTOM AS INTEGER
    ATTR AS INTEGER
    BUFLEN AS INTEGER
END TYPE
DIM SHARED BITMAP(8194) AS INTEGER
DIM SHARED BITMASK(8)
FOR I = 0 TO 7: BITMASK(I) = 2 ^ (7 - I): NEXT I

TestTX
OPEN "LPT3" FOR OUTPUT AS #1
TX ("M10CU1,0CO8KB1,0CL0")

I = 0
FOR y = 0 TO 15
  FOR x = 0 TO 15
    TX ("CO" + n$(I) + "B" + n$(x * 40) + "," + n$(y * 30) + "," + n$(x * 40 + 40) + "," + n$(y * 30 + 30))
    I = I + 1
  NEXT x
NEXT y
WHILE INPUT$(1) = "": WEND

TX ("CL0CO0B0,0,640,480CO7")
I = 0
FOR y = 0 TO 8
  FOR x = 0 TO 3
    TX ("{(7@52,52=" + n$(I) + "-" + n$(x * 160) + "|" + n$(y * 53) + "}")
    TX ("{×ÖÌå" + n$(I) + "}")
    I = I + 1
  NEXT x
NEXT y
WHILE INPUT$(1) = "": WEND

TX ("CL0CO0B0,0,640,480CO7")
FOR FONT=0 TO 10
CALL DrawStr("ABCDEFGHIJKLMNOPQRSTUVWXYZ",0,FONT*48,FONT,12,24,7)
CALL DrawStr("1234567890 !@#%^&*(),.?+=~`",0,FONT*48+24,FONT,12,24,7)
NEXT FONT
WHILE INPUT$(1) = "": WEND

TX ("KB1,1M3CU1,1")
CLOSE
END

FUNCTION n$ (A AS INTEGER)
n$ = LTRIM$(RTRIM$(STR$(A)))
END FUNCTION

SUB TestTX
DIM A%(50)
DEF SEG = VARSEG(A%(0))
RESTORE
FOR I% = 0 TO 41
    READ D%
    IF I% = 4 THEN
       D% = VARPTR(A%(49)) MOD 256
    ELSEIF I% = 5 THEN
       D% = VARPTR(A%(49)) / 256
    END IF
    POKE VARPTR(A%(0)) + I%, D%
NEXT I%
CALL ABSOLUTE(VARPTR(A%(0)))
DEF SEG
IF A%(49) = 0 THEN
   PRINT "Please run TX.COM first"
   END
END IF

DEF SEG = VARSEG(ASMINT7E(0))
FOR I% = 0 TO 30
    READ D%: POKE VARPTR(ASMINT7E(0)) + I%, D%
NEXT I%
DEF SEG = VARSEG(ASMDRAW(0))
FOR I% = 0 TO 18
    READ D%: POKE VARPTR(ASMDRAW(0)) + I%, D%
NEXT I%
DEF SEG
END SUB

SUB TX (s AS STRING)
PRINT #1, CHR$(14); "["; s; "]";
END SUB

SUB DrawStr(STR AS STRING, X1 AS INTEGER, Y1 AS INTEGER, FONT AS INTEGER, W0 AS INTEGER, H AS INTEGER, C AS INTEGER)
    I=0: L=LEN(STR): WA=W0: XA=X1
    WHILE I<L
        CH$=MID$(STR,I+1,1)
        IF ASC(CH$)>=&H80 THEN
            I=I+1: CH$=CH$+MID$(STR,I+1,1)
        END IF
        WA=W0: CALL DrawChar(CH$,XA,Y1,FONT,WA,H,C)
        XA=XA+WA: I=I+1
    WEND
END SUB

SUB DrawChar(STR AS STRING, X0 AS INTEGER, Y0 AS INTEGER, FONT AS INTEGER, W AS INTEGER, H AS INTEGER, C AS INTEGER)
    STATIC Param AS FontDataT
    IF ASC(MID$(STR,1,1)) < &H80 THEN
        Param.CH0=STR: Param.CH1=CHR$(0)
        Param.W=W
    ELSE
        Param.CH0=MID$(STR,2,1): Param.CH1=MID$(STR,1,1)
        Param.W=W*2
    END IF
    Param.FONT=FONT: Param.H=H
    Param.TOP=0: Param.BOTTOM=H-1
    Param.ATTR=1: Param.BUFLEN=16384
    DS=VARSEG(Param): ES=VARSEG(BITMAP(0))
    SI=VARPTR(Param): DI=VARPTR(BITMAP(0))
    DEF SEG=VARSEG(SI): SI0=PEEK(VARPTR(SI)): SI1=PEEK(VARPTR(SI)+1)
    DEF SEG=VARSEG(DI): DI0=PEEK(VARPTR(DI)): DI1=PEEK(VARPTR(DI)+1)
    DEF SEG=VARSEG(DS): DS0=PEEK(VARPTR(DS)): DS1=PEEK(VARPTR(DS)+1)
    DEF SEG=VARSEG(ES): ES0=PEEK(VARPTR(ES)): ES1=PEEK(VARPTR(ES)+1)
    DEF SEG=VARSEG(ASMINT7E(0)): OFFSET=VARPTR(ASMINT7E(0))
    POKE OFFSET+7, SI0: POKE OFFSET+8, SI1
    POKE OFFSET+10, DI0: POKE OFFSET+11, DI1
    POKE OFFSET+13, DS0: POKE OFFSET+14, DS1
    POKE OFFSET+16, ES0: POKE OFFSET+17, ES1
    DEF SEG=VARSEG(ASMINT7E(0)): CALL ABSOLUTE(VARPTR(ASMINT7E(0))): DEF SEG
    W=Param.W
    DEF SEG=VARSEG(BITMAP(0)): ROWBYTES=(W+7)\8: PX=VARPTR(BITMAP(0)): P=PEEK(PX)
    FOR Y=0 TO (H-1): FOR X=0 TO (W-1)
        IF P AND BITMASK(X AND 7) THEN
            XDP = X0+X: YDP = Y0+Y 
            DEF SEG=VARSEG(ASMDRAW(0)): OFFSET=VARPTR(ASMDRAW(0))
            POKE OFFSET+4,C
            POKE OFFSET+6,XDP MOD 256:POKE OFFSET+7,XDP\256
            POKE OFFSET+9,YDP MOD 256:POKE OFFSET+10,YDP\256
            CALL ABSOLUTE(VARPTR(ASMDRAW(0)))
            DEF SEG=VARSEG(BITMAP(0))
        END IF
        IF (X AND 7)=7 OR X=(W-1) THEN PX=PX+1: P=PEEK(PX)
    NEXT X: NEXT Y: DEF SEG
END SUB
